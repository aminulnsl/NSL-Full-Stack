{"ast":null,"code":"var _jsxFileName = \"/media/nsl34/hdd11/Aminul/Full_stack/task/Full-Stack/Reactjs/practice-applications/react-hooks/find-github-user-using-custom-hooks/src/FindUser.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport GitHubUser from './GitHubUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindUser = () => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"find-user\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Find User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_s(FindUser, \"VQZHmxCtsQ0nwV2XLUQawwUQN54=\");\n_c = FindUser;\nvar _c;\n$RefreshReg$(_c, \"FindUser\");","map":{"version":3,"names":["useState","GitHubUser","jsxDEV","_jsxDEV","FindUser","_s","userName","setUserName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/nsl34/hdd11/Aminul/Full_stack/task/Full-Stack/Reactjs/practice-applications/react-hooks/find-github-user-using-custom-hooks/src/FindUser.js"],"sourcesContent":["import { useState } from 'react';\nimport GitHubUser from './GitHubUser';\n\nconst FindUser = () => {\n    const [userName, setUserName] = useState(\"\");\n\n    return (\n        <div className=\"find-user\">\n            <h1>Find User</h1>\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,oBACIG,OAAA;IAAKK,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBN,OAAA;MAAAM,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChB;AAEd,CAAC;AAAAR,EAAA,CARKD,QAAQ;AAAAU,EAAA,GAARV,QAAQ;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}